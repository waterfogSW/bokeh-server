name: User API(REST) CI pipeline

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/user-api-rest-ci.yaml'
      - 'user/**'

jobs:
  run_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: |
          cd user
          chmod +x gradlew

      - name: Run Tests with Gradle
        run: |
          cd user
          ./gradlew test --continue --build-cache

  build_and_push_image:
    needs: run_tests
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Get ECR User URL
        id: get-user_api_rest-ecr_url
        run: |
          url=$(aws ssm get-parameter --name bokeh-user_api_rest-ecr_url --query 'Parameter.Value' --output text)
          echo "::set-output name=url::$url"

      - name: Login to Amazon ECR(User API - REST)
        id: login-ecr
        run: |
          aws ecr-public get-login-password --region us-east-1 | 
          docker login --username AWS --password-stdin ${{ steps.get-user_api_rest-ecr_url.outputs.url }}

      - name: Build and Push User
        run: |
          cd user
          docker build -t ${{ steps.get-user_api_rest-ecr_url.outputs.url }} -f user-api-rest.dockerfile .
          docker push ${{ steps.get-user_api_rest-ecr_url.outputs.url }}
